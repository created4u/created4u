<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AWS Notes</title>
    <url>/created4u/2022/12/23/AWSCloudPractionerEssential/</url>
    <content><![CDATA[<h1 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>云计算就是通过互联网<strong>按需提供</strong> IT 资源并采用<strong>按需付费</strong>定价模式。</p>
<h2 id="部署模式"><a href="#部署模式" class="headerlink" title="部署模式"></a>部署模式</h2><ul>
<li>云端部署<ul>
<li>在云中运行应用程序的所有组件</li>
<li>将现有应用程序迁移到云</li>
<li>在云中设计和构建新的应用程序</li>
</ul>
</li>
<li>本地部署&#x2F;私有云部署<ul>
<li>利用虚拟化工具和资源管理工具部署资源</li>
<li>利用应用程序和虚拟化技术提高资源利用率</li>
</ul>
</li>
<li>混合部署<ul>
<li>将基于云的资源与本地基础设施连接</li>
<li>将基于云的资源与传统 IT 应用程序集成</li>
</ul>
</li>
</ul>
<h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol>
<li><p>将前期费用变成可变支出</p>
<p> 前期费用是指您在使用数据中心、物理服务器和其他资源之前需要为其投入的费用。可变支出意味着您只需为消耗的计算资源付费，而不需要在知道自己会如何使用数据中心和服务器之前进行大量投资。</p>
</li>
<li><p>无需在数据中心运行和维护方面投入资金</p>
</li>
<li><p>无需猜测容量</p>
</li>
<li><p>实现规模经济效益</p>
</li>
<li><p>提高速度和敏捷性</p>
</li>
<li><p>几分钟内实现全球化部署</p>
</li>
</ol>
<h1 id="EC2"><a href="#EC2" class="headerlink" title="EC2"></a>EC2</h1><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><ol>
<li><p>启动</p>
<p> 为实例选择具有基本配置的模板，包括操作系统，应用程序服务器或应用程序。还要选择实例类型，即实例的具体硬件配置。</p>
</li>
<li><p>连接</p>
</li>
<li><p>使用</p>
</li>
</ol>
<h2 id="实例类型"><a href="#实例类型" class="headerlink" title="实例类型"></a>实例类型</h2><ol>
<li><p>通用型</p>
<p> 实现计算，内存和网络资源的均衡。</p>
<ul>
<li>应用程序服务器</li>
<li>游戏服务器</li>
<li>企业应用程序的后端服务器</li>
<li>中小型数据库</li>
</ul>
</li>
<li><p>计算优化型</p>
<p> 适合需要使用高性能处理器的计算密集型应用程序。</p>
<ul>
<li>高性能 Web 服务器</li>
<li>计算密集型应用程序服务器</li>
<li>专用游戏服务器</li>
<li>成组处理多个事务的批处理工作负载</li>
</ul>
</li>
<li><p>内存优化型</p>
<p> 提高用于处理内存中的大型数据集的工作负载的性能。</p>
<ul>
<li>高性能数据库</li>
</ul>
</li>
<li><p>加速计算型</p>
<p> 使用硬件加速器或协同处理器来执行一些功能。</p>
<ul>
<li>浮点数计算</li>
<li>图形处理</li>
<li>数据模式匹配</li>
</ul>
</li>
<li><p>存储优化型</p>
<p> 适用于需要对本地存储上的大型数据集进行高速连续读写访问的工作负载。</p>
<ul>
<li>分布式文件系统</li>
<li>数据仓库应用程序</li>
<li>高频在线事务处理系统</li>
</ul>
</li>
</ol>
<h2 id="可扩展性"><a href="#可扩展性" class="headerlink" title="可扩展性"></a>可扩展性</h2><p>可扩展性是指仅从需要的资源开始，并且设计架构以便自动扩展和缩减，从而响应不断变化的需求。</p>
]]></content>
  </entry>
  <entry>
    <title>数据库复习</title>
    <url>/created4u/2023/02/19/DatabaseSystemConceptsChapter0/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h2 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h2><ol>
<li>data-management system(DBMS), is a collection of interrelated data and a set of programs to access those data.</li>
<li>database, a collection of data that contains information relevant to an enterprise.</li>
<li>online transaction processing, where a large number of users use the database, with each user retrieving relatively small amounts of data, and performing small updates.</li>
<li>data analytics, the processing of data to draw conclusions, and infer rules or decision procedures, which are then used to drive business decisions.</li>
<li>data inconsistency, the various copies of the same data may no longer agree.</li>
<li>instance of database, the collection of information stored in the database at a particular moment.</li>
<li>database schema, the overall design of the database.</li>
</ol>
<h2 id="Some-Views"><a href="#Some-Views" class="headerlink" title="Some Views"></a>Some Views</h2><h3 id="1-Disadvantages-of-FPS"><a href="#1-Disadvantages-of-FPS" class="headerlink" title="1. Disadvantages of FPS"></a>1. Disadvantages of FPS</h3><ul>
<li>Data redundancy and inconsistency<ul>
<li>same information may be duplicated in several files</li>
<li>the various copies of the same data may no longer agree</li>
</ul>
</li>
<li>Difficulty in accessing data<ul>
<li>conventional file-processing environment do not allow needed data to be retrieved in a convinent and efficient manner</li>
</ul>
</li>
<li>Data isolation<ul>
<li>data are scattered in various files, and files may be in different formats</li>
</ul>
</li>
<li>Integrity problems<ul>
<li>difficult to ensure consistency constraints when constraints invovle several data items from different files</li>
</ul>
</li>
<li>Atomicity problems<ul>
<li>hard to ensure atomicity in a conventional file-processing system</li>
</ul>
</li>
<li>Concurrent-access anomalies</li>
<li>Security problems</li>
</ul>
<h3 id="2-Data-Models"><a href="#2-Data-Models" class="headerlink" title="2. Data Models"></a>2. Data Models</h3><ul>
<li><strong>Relational Models</strong><ul>
<li>a collection of tables to represent both data and the relationships among those data</li>
<li>each table has multiple columns, each column has a <em>unique</em> name</li>
</ul>
</li>
<li><strong>Entity-Relationship Model</strong><ul>
<li>a collection of <em>entities</em>, and relationships among entities</li>
<li>an entity, is a “thing” or “object” in the real world that is <em>distinguishable</em> from other objects</li>
</ul>
</li>
<li><strong>Semi-Structured Data Model</strong><ul>
<li>permits the specification of data where individual data items of the same type may have <em>different sets of attributes</em></li>
<li>widely used in JSON and Extensible Markup Language(XML)</li>
</ul>
</li>
<li><strong>Object-Based Data Model</strong></li>
</ul>
<h3 id="3-Levels-of-Data-Abstraction"><a href="#3-Levels-of-Data-Abstraction" class="headerlink" title="3. Levels of Data Abstraction"></a>3. Levels of Data Abstraction</h3><ul>
<li><strong>Physical Level</strong><ul>
<li>the lowest level</li>
<li><em>how</em> data stored</li>
<li>describles complex low-level data structures in detail</li>
</ul>
</li>
<li><strong>Logical Level</strong><ul>
<li>the middle level</li>
<li><em>what</em> data are stored and <em>what</em> relationships exist among those data</li>
<li>describles the entire database in terms of a small numbers of relatively simple structures</li>
</ul>
</li>
<li><strong>View Level</strong><ul>
<li>the highest level</li>
<li>describles only part of the entire database</li>
</ul>
</li>
</ul>
<h3 id="4-Instance-amp-Schema"><a href="#4-Instance-amp-Schema" class="headerlink" title="4. Instance &amp; Schema"></a>4. Instance &amp; Schema</h3><p>Database systems have several schemas, partitioned according to the levels of the abstraction:</p>
<ul>
<li>Physical Schema</li>
<li>Logical Schema</li>
<li>Subschema</li>
</ul>
<h3 id="5-Database-Languages"><a href="#5-Database-Languages" class="headerlink" title="5. Database Languages"></a>5. Database Languages</h3><h4 id="DDL-Data-Definition-Language"><a href="#DDL-Data-Definition-Language" class="headerlink" title="DDL, Data-Definition Language"></a>DDL, Data-Definition Language</h4><p>DDL is used to specify a database schema and addtional properties of the data.</p>
<h4 id="DML-Data-Manipulation-Language"><a href="#DML-Data-Manipulation-Language" class="headerlink" title="DML, Data-Manipulation Language"></a>DML, Data-Manipulation Language</h4>]]></content>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Database System Concept</title>
    <url>/created4u/2023/03/09/DatabaseOperations/</url>
    <content><![CDATA[<h1 id="SQL-Basic"><a href="#SQL-Basic" class="headerlink" title="SQL Basic"></a>SQL Basic</h1><p>此教程结合 <a href="https://www.runoob.com/sql/sql-tutorial.html">菜鸟教程</a> 以及 Database System Concepts(7th Edition) 数据库系统概念附带的 <a href="https://www.db-book.com/university-lab-dir/sqljs.html">Online SQL Interpreter</a>，在网站上自己实践效果更好。</p>
<blockquote>
<ol>
<li>SQL 大小写不敏感，以下所有命令都可以采用大写。</li>
<li>有些数据库不加分号 <code>;</code> 也可以，比如 IBM DB2。</li>
</ol>
</blockquote>
<h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><h3 id="format"><a href="#format" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> TABLE_NAME;</span><br><span class="line"><span class="keyword">select</span> COLUMUN_NAME <span class="keyword">from</span> TABLE_NAME;</span><br></pre></td></tr></table></figure>

<h3 id="e-g"><a href="#e-g" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> classroom;</span><br><span class="line"><span class="keyword">select</span> building <span class="keyword">from</span> classroom;</span><br></pre></td></tr></table></figure>

<h2 id="select-distinct"><a href="#select-distinct" class="headerlink" title="select distinct"></a>select distinct</h2><h3 id="format-1"><a href="#format-1" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME;</span><br></pre></td></tr></table></figure>

<h3 id="e-g-1"><a href="#e-g-1" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> dept_name <span class="keyword">from</span> course;</span><br></pre></td></tr></table></figure>

<h2 id="where"><a href="#where" class="headerlink" title="where"></a>where</h2><h3 id="format-2"><a href="#format-2" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME</span><br><span class="line"><span class="keyword">where</span> COLUMN_NAME operator <span class="keyword">VALUE</span></span><br></pre></td></tr></table></figure>

<h2 id="operator"><a href="#operator" class="headerlink" title="operator"></a>operator</h2><ul>
<li><code>=</code></li>
<li><code>&lt;&gt;</code> 或 <code>!=</code></li>
<li><code>&gt;</code></li>
<li><code>&lt;</code></li>
<li><code>&gt;=</code></li>
<li><code>&lt;=</code></li>
<li><code>between</code></li>
<li><code>like</code></li>
<li><code>in</code></li>
</ul>
<h3 id="e-g-2"><a href="#e-g-2" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> building <span class="keyword">from</span> classroom <span class="keyword">where</span> building<span class="operator">=</span><span class="string">&#x27;Packard&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="and-x2F-or"><a href="#and-x2F-or" class="headerlink" title="and&#x2F;or"></a>and&#x2F;or</h2><h3 id="format-3"><a href="#format-3" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME</span><br><span class="line"><span class="keyword">where</span> CONDITION_ONE <span class="keyword">and</span><span class="operator">/</span><span class="keyword">or</span> CONDITION_TWO;</span><br></pre></td></tr></table></figure>

<h3 id="e-g-3"><a href="#e-g-3" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> course <span class="keyword">where</span> credits<span class="operator">=</span><span class="string">&#x27;3&#x27;</span> <span class="keyword">and</span> dept_name<span class="operator">=</span>&quot;Music&quot;;</span><br></pre></td></tr></table></figure>

<h2 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h2><h3 id="format-4"><a href="#format-4" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> COLUMN_NAME <span class="keyword">from</span> TABLE_NAME <span class="keyword">order</span> <span class="keyword">by</span> COLUMN_NAME (<span class="keyword">desc</span>);</span><br></pre></td></tr></table></figure>

<h3 id="e-g-4"><a href="#e-g-4" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> classroom <span class="keyword">order</span> <span class="keyword">by</span> building;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> classroom <span class="keyword">order</span> <span class="keyword">by</span> building <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>

<h2 id="insert-into"><a href="#insert-into" class="headerlink" title="insert into"></a>insert into</h2><h3 id="format-5"><a href="#format-5" class="headerlink" title="format"></a>format</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> TABLE_NAME <span class="keyword">values</span>(VALUE_1,VALUE_2,VALUE_3,...);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> TABLE_NAME (COLUMN_1,COLUMN_2,COLUMN_3,...) <span class="keyword">values</span>(VALUE_1,VALUE_2,VALUE_3,...);</span><br></pre></td></tr></table></figure>

<h3 id="e-g-5"><a href="#e-g-5" class="headerlink" title="e.g."></a>e.g.</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> classroom <span class="keyword">values</span>(&quot;Classroom&quot;,&quot;666&quot;,<span class="number">88</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>关于我自己</title>
    <url>/created4u/2023/06/06/about-CN/</url>
    <content><![CDATA[<p>简体中文 | <a href="../about-TCN/index.html">繁體中文</a> | <a href="../about/index.html">English</a> | <a href="../about-FR/index.html">Français</a></p>
<img src="/created4u/2023/06/06/about-CN/code.png" class="" title="Programming is art.">

<h1 id="你好！"><a href="#你好！" class="headerlink" title="你好！"></a>你好！</h1><p>欢迎访问我的个人主页，我也非常荣幸能够同你这样有趣的灵魂在此相遇。</p>
<h1 id="学习经历"><a href="#学习经历" class="headerlink" title="学习经历"></a>学习经历</h1><ul>
<li>2017 - 2020，高中，安徽省亳州市第一中学</li>
<li>2020 - 至今，本科，吉林大学计算机科学与技术学院</li>
</ul>
<h1 id="参与项目"><a href="#参与项目" class="headerlink" title="参与项目"></a>参与项目</h1><ul>
<li>RISC-V 指令集软件仿真</li>
<li>基于 YOLOv5 的智能捡拾机器人</li>
<li>我自己的 Repositories<ul>
<li><a href="https://github.com/created4u/heartbeat.git">Heartbeat</a></li>
<li><a href="https://github.com/created4u/Coursea.git">Coursea</a></li>
</ul>
</li>
</ul>
<h1 id="所获荣誉"><a href="#所获荣誉" class="headerlink" title="所获荣誉"></a>所获荣誉</h1><p>（截止至 2023 年 6 月）</p>
<ul>
<li>2020 - 2021，吉林大学三等奖学金</li>
<li>2021 - 2022，吉林大学二等奖学金</li>
<li>2021 - 2022，吉林大学计算机科学与技术学院院优秀学生</li>
</ul>
<h1 id="兴趣爱好"><a href="#兴趣爱好" class="headerlink" title="兴趣爱好"></a>兴趣爱好</h1><ul>
<li>语言学习。空余时间会学习各种有趣的语言，例如 Français，Русский，Español 等语言。</li>
<li>绘画（约等于～乱画）。没有系统地学过相关知识，就是想画啥画啥。</li>
<li>阅读文学。<a href="https://en.wikipedia.org/wiki/Franz_Kafka">Kafka</a> 和 <a href="https://en.wikipedia.org/wiki/Virginia_Woolf">Woolf</a> 是我最喜欢的作家之一，虽然有时候看不太懂，但是更让我痴迷不已。</li>
<li>设计各种有意思的东西，执着于用平凡的材料创造出不平凡的事物，用颜色表达情感。</li>
<li>摄影。用相机记录下每一个值得回忆的瞬间。</li>
</ul>
<h2 id="我的小作品"><a href="#我的小作品" class="headerlink" title="我的小作品 :)"></a>我的小作品 :)</h2><p>这是几年前我画的第一幅画。</p>
<img src="/created4u/2023/06/06/about-CN/him.PNG" class="" title="The first man I drew.">

<p>这是我家仙人掌开的花。</p>
<img src="/created4u/2023/06/06/about-CN/cactus.jpeg" class="" title="Cactus flower.">]]></content>
      <categories>
        <category>-[about]</category>
      </categories>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/created4u/2023/06/06/about/</url>
    <content><![CDATA[<p>English | <a href="../about-TCN/index.html">繁體中文</a> | <a href="../about-CN/index.html">简体中文</a> | <a href="../about-FR/index.html">Français</a></p>
<img src="/created4u/2023/06/06/about/code.png" class="" title="Programming is art.">

<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello!"></a>Hello!</h1><p>Welcome to my personal homepage, and I’m glad to meet such an interesting soul as you.</p>
<h1 id="Experience"><a href="#Experience" class="headerlink" title="Experience"></a>Experience</h1><ul>
<li>2017 - 2020, No.1 High School of Bozhou, Anhui Province</li>
<li>2020 - 2024, College of Computer Science and Technology, Jilin University</li>
</ul>
<h1 id="Projects"><a href="#Projects" class="headerlink" title="Projects"></a>Projects</h1><ul>
<li>Emulator based on RISC-V</li>
<li>Intelligent picking robot using YOLOv5</li>
<li>Some repositories<ul>
<li><a href="https://github.com/created4u/heartbeat.git">Heartbeat</a></li>
<li><a href="https://github.com/created4u/Coursea.git">Coursea</a></li>
</ul>
</li>
</ul>
<h1 id="Awards"><a href="#Awards" class="headerlink" title="Awards"></a>Awards</h1><p>(Updated on 6, June, 2023)</p>
<ul>
<li>2020 - 2021, Second Class Scholarship, Jilin University</li>
<li>2021 - 2022, Third Class Scholarship, Jilin University</li>
<li>2021 - 2022, College Excellent Student, Jilin University</li>
</ul>
<h1 id="Hobbies"><a href="#Hobbies" class="headerlink" title="Hobbies"></a>Hobbies</h1><ul>
<li>Learning languages. When I’m free, learning different languages is a wonderful way to consume time, Français, Русский, Español… those are my favorites.</li>
<li>Painting. Just for fun :P.</li>
<li>Reading. <a href="https://en.wikipedia.org/wiki/Franz_Kafka">Kafka</a> and <a href="https://en.wikipedia.org/wiki/Virginia_Woolf">Woolf</a> are among my favorite authors. Although sometimes I don’t fully understand their brilliant work, it makes me even more engrossed.</li>
<li>Design all kinds of interesting things, insist on creating extraordinary things with ordinary materials, and express emotions with colors.</li>
<li>Photography. Recording every moment of normal life with camera.</li>
</ul>
<h2 id="My-Works"><a href="#My-Works" class="headerlink" title="My Works :)"></a>My Works :)</h2><p>Here is the first work I painted several years ago.</p>
<img src="/created4u/2023/06/06/about/him.PNG" class="" title="The first man I drew.">

<p>And this is a flower of cactus in my home.</p>
<img src="/created4u/2023/06/06/about/cactus.jpeg" class="" title="Cactus flower.">]]></content>
      <categories>
        <category>-[about]</category>
      </categories>
  </entry>
  <entry>
    <title>關於我自己</title>
    <url>/created4u/2023/06/06/about-TCN/</url>
    <content><![CDATA[<p>繁體中文 | <a href="../about-CN/index.html">简体中文</a> | <a href="../about/index.html">English</a> | <a href="../about-FR/index.html">Français</a></p>
<img src="/created4u/2023/06/06/about-TCN/code.png" class="" title="Programming is art.">

<h1 id="你好！"><a href="#你好！" class="headerlink" title="你好！"></a>你好！</h1><p>歡迎訪問我嘅個人主頁，我都非常榮幸能夠同你咁有趣嘅靈魂在此相遇。</p>
<h1 id="學習經歷"><a href="#學習經歷" class="headerlink" title="學習經歷"></a>學習經歷</h1><ul>
<li>2017 - 2020，高中，安徽省亳州市第一中學</li>
<li>2020 - 至今，本科，吉林大學計算機科學與技術學院</li>
</ul>
<h1 id="參與項目"><a href="#參與項目" class="headerlink" title="參與項目"></a>參與項目</h1><ul>
<li>RISC-V 指令集軟件仿真</li>
<li>基於 YOLOv5 嘅智能撿拾機械人</li>
<li>我自己嘅 Repositories<ul>
<li><a href="https://github.com/created4u/heartbeat.git">Heartbeat</a></li>
<li><a href="https://github.com/created4u/Coursea.git">Coursea</a></li>
</ul>
</li>
</ul>
<h1 id="所獲榮譽"><a href="#所獲榮譽" class="headerlink" title="所獲榮譽"></a>所獲榮譽</h1><p>（截止至 2023 年 6 月）</p>
<ul>
<li>2020 - 2021，吉林大學三等獎學金</li>
<li>2021 - 2022，吉林大學二等獎學金</li>
<li>2021 - 2022，吉林大學計算機科學與技術學院院優秀學生</li>
</ul>
<h1 id="興趣愛好"><a href="#興趣愛好" class="headerlink" title="興趣愛好"></a>興趣愛好</h1><ul>
<li>語言學習。空餘時間會學習各種有趣嘅語言，例如 Français，Русский，Español 等語言。</li>
<li>繪畫（約等於~亂畫）。冇系統咁學過相關知識，就係想畫啥畫啥。</li>
<li>閱讀文學。<a href="https://en.wikipedia.org/wiki/Franz_Kafka">Kafka</a> 同 <a href="https://en.wikipedia.org/wiki/Virginia_Woolf">Woolf</a> 係我最鍾意嘅作家之一，雖然有時候睇唔係幾明，但係更令我癡迷不已。</li>
<li>設計各種有意思嘅嘢，執著于用平凡嘅材料創造出不平凡嘅嘢，用顏色表達情感。</li>
<li>攝影。用相機記錄的每一個值得回憶嘅瞬間。</li>
</ul>
<h2 id="個人作品"><a href="#個人作品" class="headerlink" title="個人作品 :)"></a>個人作品 :)</h2><p>係幾年前我畫嘅第一幅畫。</p>
<img src="/created4u/2023/06/06/about-TCN/him.PNG" class="" title="The first man I drew.">

<p>係我屋企仙人掌開嘅花。</p>
<img src="/created4u/2023/06/06/about-TCN/cactus.jpeg" class="" title="Cactus flower.">]]></content>
      <categories>
        <category>-[about]</category>
      </categories>
  </entry>
  <entry>
    <title>Présentation de soi.</title>
    <url>/created4u/2023/06/06/about-FR/</url>
    <content><![CDATA[<p>Français | <a href="../about/index.html">English</a> | <a href="../about-TCN/index.html">繁體中文</a> | <a href="../about-CN/index.html">简体中文</a></p>
<img src="/created4u/2023/06/06/about-FR/code.png" class="" title="Programming is art.">

<h1 id="Bonjour"><a href="#Bonjour" class="headerlink" title="Bonjour!"></a>Bonjour!</h1><p>Bienvenue sur ma page d’accueil personnelle, et je suis heureux de rencontrer une âme aussi intéressante que vous.</p>
<h1 id="Experience"><a href="#Experience" class="headerlink" title="Expérience"></a>Expérience</h1><ul>
<li>2017 - 2020, Premier Lycée de Bozhou, Province d’Anhui</li>
<li>2020 - 2024, Collège d’informatique et de technologie, Université de Jilin</li>
</ul>
<h1 id="Projets"><a href="#Projets" class="headerlink" title="Projets"></a>Projets</h1><ul>
<li>Émulateur basé sur RISC-V</li>
<li>Robot de prélèvement intelligent utilisant YOLOv5</li>
<li>Certains  Github Repositories<ul>
<li><a href="https://github.com/created4u/heartbeat.git">Heartbeat</a></li>
<li><a href="https://github.com/created4u/Coursea.git">Coursea</a></li>
</ul>
</li>
</ul>
<h1 id="Recompenses-et-Honneurs"><a href="#Recompenses-et-Honneurs" class="headerlink" title="Récompenses et Honneurs"></a>Récompenses et Honneurs</h1><p>(Mise à jour le 6 juin 2023)</p>
<ul>
<li>2020 - 2021, Bourse de deuxième classe, Université de Jilin</li>
<li>2021 - 2022, Bourse de troisième classe, Université de Jilin</li>
<li>2021 - 2022, Excellent étudiant universitaire, Université de Jilin</li>
</ul>
<h1 id="Loisirs"><a href="#Loisirs" class="headerlink" title="Loisirs"></a>Loisirs</h1><ul>
<li>Apprendre des langues. Quand je suis libre, apprendre différentes langues est une merveilleuse façon de gagner du temps, Français, Русский, Español… ce sont mes préférées.</li>
<li>Peinture. Juste pour le fun :P.</li>
<li>En lisant. <a href="https://en.wikipedia.org/wiki/Franz_Kafka">Kafka</a> et <a href="https://en.wikipedia.org/wiki/Virginia_Woolf">Woolf</a> sont parmi mes auteurs préférés. Bien que parfois je ne comprenne pas entièrement leur travail brillant, cela me rend encore plus captivé.</li>
<li>Concevez toutes sortes de choses intéressantes, insistez pour créer des choses extraordinaires avec des matériaux ordinaires et exprimez des émotions avec des couleurs.</li>
<li>La photographie. Enregistrement de chaque instant de la vie normale avec caméra.</li>
</ul>
<h2 id="Ma-Creation"><a href="#Ma-Creation" class="headerlink" title="Ma Création :)"></a>Ma Création :)</h2><p>Voici la première œuvre que j’ai peinte il y a plusieurs années.</p>
<img src="/created4u/2023/06/06/about-FR/him.PNG" class="" title="The first man I drew.">

<p>Et c’est une fleur de cactus chez moi.</p>
<img src="/created4u/2023/06/06/about-FR/cactus.jpeg" class="" title="Cactus flower.">]]></content>
      <categories>
        <category>-[about]</category>
      </categories>
  </entry>
  <entry>
    <title>C++ 基础回顾</title>
    <url>/created4u/2023/06/21/CppBasic/</url>
    <content><![CDATA[<h1 id="类和面向对象"><a href="#类和面向对象" class="headerlink" title="类和面向对象"></a>类和面向对象</h1><h2 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h2><p>如果一个成员变量被声明为 <code>static</code>，则该类的所有对象均可以访问该变量。如果一个成员函数被声明为 <code>static</code>，则它可以在类的任何实例被定义之前调用。</p>
<p><strong>静态成员变量必须在类中声明，在类外部定义。</strong></p>
<h2 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h2><h2 id="派生"><a href="#派生" class="headerlink" title="派生"></a>派生</h2><h3 id="构造与析构"><a href="#构造与析构" class="headerlink" title="构造与析构"></a>构造与析构</h3><p>派生类对象构造时，先调用基类的构造函数，再调用自身的构造函数。<br>派生类对象析构时，先调用自身的析构函数，再调用基类的析构函数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="built_in">A</span>() &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Hello A&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">A</span>() &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Bye A&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">B</span>: <span class="keyword">public</span> A&#123;</span><br><span class="line">    <span class="built_in">B</span>() &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Hello B&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">B</span>() &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Bye B&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    A a;</span><br><span class="line">    B b;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello A</span><br><span class="line">Hello A</span><br><span class="line">Hello B</span><br><span class="line">Bye B</span><br><span class="line">Bye A</span><br><span class="line">Bye A</span><br></pre></td></tr></table></figure>

<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2>]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>无线网络课程复习</title>
    <url>/created4u/2023/06/21/WirelessNetwork/</url>
    <content><![CDATA[<h1 id="DV-和-DSDV"><a href="#DV-和-DSDV" class="headerlink" title="DV 和 DSDV"></a>DV 和 DSDV</h1><h2 id="DV"><a href="#DV" class="headerlink" title="DV"></a>DV</h2><h2 id="DSDV"><a href="#DSDV" class="headerlink" title="DSDV"></a>DSDV</h2><p>Ref. <a href="https://blog.csdn.net/qq_21324665/article/details/79159080%E3%80%82">https://blog.csdn.net/qq_21324665/article/details/79159080。</a></p>
<h2 id="按需路由协议"><a href="#按需路由协议" class="headerlink" title="按需路由协议"></a>按需路由协议</h2><h3 id="DSR"><a href="#DSR" class="headerlink" title="DSR"></a>DSR</h3><p>Ref. <a href="https://blog.csdn.net/weixin_42982240/article/details/125033059%E3%80%82">https://blog.csdn.net/weixin_42982240/article/details/125033059。</a></p>
<h3 id="AODV"><a href="#AODV" class="headerlink" title="AODV"></a>AODV</h3>]]></content>
      <tags>
        <tag>无线网络技术</tag>
      </tags>
  </entry>
  <entry>
    <title>STL 之字符串</title>
    <url>/created4u/2023/06/21/String-STL/</url>
    <content><![CDATA[<h1 id="string"><a href="#string" class="headerlink" title="string"></a>string</h1><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">string <span class="title">s1</span><span class="params">(<span class="string">&quot;Milo_Song_2120&quot;</span>)</span></span>;</span><br><span class="line">    <span class="type">char</span> ch[] = <span class="string">&quot;Hello_Cpp&quot;</span>;</span><br><span class="line">    <span class="function">string <span class="title">s2</span><span class="params">(s1)</span></span>;                       <span class="comment">// 复制字符串</span></span><br><span class="line">    <span class="function">string <span class="title">s3</span><span class="params">(s1, <span class="number">2</span>, <span class="number">5</span>)</span></span>;                 <span class="comment">// 从 s1[2] 开始，复制 5 个字符</span></span><br><span class="line">    <span class="function">string <span class="title">s4</span><span class="params">(ch, <span class="number">4</span>)</span></span>;                    <span class="comment">// 复制 ch 的前 4 个字符</span></span><br><span class="line">    <span class="function">string <span class="title">s5</span><span class="params">(<span class="number">9</span>, <span class="string">&#x27;6&#x27;</span>)</span></span>;                   <span class="comment">// 9 个字符 &#x27;6&#x27;</span></span><br><span class="line">    <span class="function">string <span class="title">s6</span><span class="params">(s1.begin(), s1.end())</span></span>;     <span class="comment">// 复制整个字符串</span></span><br><span class="line">    <span class="function">string <span class="title">s7</span><span class="params">(s1.begin(), s1.end() - <span class="number">1</span>)</span></span>; <span class="comment">// 复制除最后一个字符以外的所有字符</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s1 = &quot;</span> &lt;&lt; s1 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s2 = &quot;</span> &lt;&lt; s2 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s3 = &quot;</span> &lt;&lt; s3 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s4 = &quot;</span> &lt;&lt; s4 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s5 = &quot;</span> &lt;&lt; s5 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s6 = &quot;</span> &lt;&lt; s6 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;s7 = &quot;</span> &lt;&lt; s7 &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s1 = Milo_Song_2120;</span><br><span class="line">s2 = Milo_Song_2120;</span><br><span class="line">s3 = lo_So;</span><br><span class="line">s4 = Hell;</span><br><span class="line">s5 = 666666666;</span><br><span class="line">s6 = Milo_Song_2120;</span><br><span class="line">s7 = Milo_Song_212;</span><br></pre></td></tr></table></figure>

<h2 id="string-的大小和容量"><a href="#string-的大小和容量" class="headerlink" title="string 的大小和容量"></a>string 的大小和容量</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">string <span class="title">s</span><span class="params">(<span class="string">&quot;hello&quot;</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Size of s: &quot;</span> &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Length of s: &quot;</span> &lt;&lt; s.<span class="built_in">length</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Max size of s: &quot;</span> &lt;&lt; s.<span class="built_in">max_size</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Capacity of s: &quot;</span> &lt;&lt; s.<span class="built_in">capacity</span>() &lt;&lt; endl;</span><br><span class="line">    s.<span class="built_in">reserve</span>(<span class="number">66</span>);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Capacity of s: &quot;</span> &lt;&lt; s.<span class="built_in">capacity</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Size of s: 5</span><br><span class="line">Length of s: 5</span><br><span class="line">Max size of s: 9223372036854775791</span><br><span class="line">Capacity of s: 22</span><br><span class="line">Capacity of s: 79</span><br></pre></td></tr></table></figure>

<p>⚠️ <code>s.reserve()</code> 和 <code>s.capacity()</code> 这两个函数没搞太懂。</p>
<h2 id="string-读取"><a href="#string-读取" class="headerlink" title="string 读取"></a>string 读取</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">string <span class="title">s</span><span class="params">(<span class="string">&quot;Hello_Song&quot;</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">at</span>(<span class="number">4</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">at</span>(s.<span class="built_in">length</span>() - <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s[s.<span class="built_in">length</span>()] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s[s.<span class="built_in">length</span>() - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">o</span><br><span class="line">g</span><br><span class="line"> </span><br><span class="line">g</span><br></pre></td></tr></table></figure>

<h2 id="string-比较"><a href="#string-比较" class="headerlink" title="string 比较"></a>string 比较</h2><p><code>compare()</code> 函数</p>
<ul>
<li><code>string1.compare(pos, n, string2)</code></li>
<li>比较结果相同，返回 0 值</li>
<li>比较结果不同<ul>
<li><code>string1</code> 的字典序先于 <code>string2</code>，返回负值</li>
<li>否则，返回正值</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">string <span class="title">s1</span><span class="params">(<span class="string">&quot;abcdef&quot;</span>)</span></span>;</span><br><span class="line">    <span class="function">string <span class="title">s2</span><span class="params">(<span class="string">&quot;hijkl&quot;</span>)</span></span>;</span><br><span class="line">    <span class="function">string <span class="title">s3</span><span class="params">(<span class="string">&quot;abcdef&quot;</span>)</span></span>;</span><br><span class="line">    <span class="function">string <span class="title">s4</span><span class="params">(<span class="string">&quot;abcd&quot;</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">compare</span>(s2) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">compare</span>(s3) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">compare</span>(s4) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s1.<span class="built_in">compare</span>(<span class="number">0</span>, <span class="number">4</span>, s4);   <span class="comment">//s1 -&gt; abcd 与 s4 比较</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-7</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<p>当然也可以直接使用比较运算符来比较。</p>
<h2 id="string-的修改和替换"><a href="#string-的修改和替换" class="headerlink" title="string 的修改和替换"></a>string 的修改和替换</h2><p><code>assign()</code> 和 <code>swap()</code> 函数可以正常使用，但是 <code>erase()</code> 函数出现问题。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">string <span class="title">s1</span><span class="params">(<span class="string">&quot;ABCDEFG&quot;</span>)</span></span>;</span><br><span class="line">    string s2, s3, s4, s5;</span><br><span class="line">    s2.<span class="built_in">assign</span>(s1);</span><br><span class="line">    cout &lt;&lt; s2 &lt;&lt; endl;</span><br><span class="line">    s3.<span class="built_in">assign</span>(s1, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; s3 &lt;&lt; endl;</span><br><span class="line">    s4.<span class="built_in">assign</span>(<span class="number">6</span>, <span class="string">&#x27;X&#x27;</span>);</span><br><span class="line">    cout &lt;&lt; s4 &lt;&lt; endl;</span><br><span class="line">    s5.<span class="built_in">swap</span>(s1);</span><br><span class="line">    cout &lt;&lt; s5 &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ABCDEFG</span></span><br><span class="line"><span class="comment">// BCD</span></span><br><span class="line"><span class="comment">// XXXXXX</span></span><br><span class="line"><span class="comment">// ABCDEFG</span></span><br></pre></td></tr></table></figure>

<p><code>insert()</code> 函数的使用如下。</p>
]]></content>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
</search>
